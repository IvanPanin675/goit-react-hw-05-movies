{"version":3,"file":"static/js/129.49cfa0ee.chunk.js","mappings":"uQACA,EAAyB,iCAAzB,EAAqE,mCAArE,EAA+G,+BAA/G,EAAqJ,+B,SCOxIA,EAAmB,WAAO,IAAD,EACpC,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAWC,EAAAA,EAAAA,MAGXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,KAErCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBb,GAAW,GAFM,UAGEc,EAAAA,EAAAA,IAAWT,GAHb,OAGXU,EAHW,OAIjBb,EAASa,GACTX,EAAUW,EAAKZ,QALE,gDAOjBa,QAAQC,IAAI,KAAMC,SAPD,yBASjBlB,GAAW,GATM,4EAAH,qDAalBa,GACD,GAAE,CAACR,IAEJ,IAAMc,GAASC,EAAAA,EAAAA,cAAY,WACzBb,EAASE,EACV,GAAE,CAACF,EAAUE,IAEd,OACE,iCACE,mBAAQY,QAASF,EAAjB,qBACCpB,IAAW,SAACuB,EAAA,EAAD,KAEZ,iBAAKC,UAAWC,EAAhB,UACGvB,EAAMwB,cACL,gBACEC,IAAG,0CAAqCzB,EAAMwB,aAC9CF,UAAWC,EACXG,IAAI,MAGR,4BACE,wBAAK1B,EAAM2B,SACX,wCAAgBC,KAAKC,MAA2B,GAArB7B,EAAM8B,cAAjC,QACA,sCACA,uBAAI9B,EAAM+B,YACV,oCACA,wBACG7B,EAAO8B,KAAI,gBAAG5B,EAAH,EAAGA,GAAI6B,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAAL7B,EADC,aAMlB,iBAAKkB,UAAWC,EAAhB,WACE,SAAC,KAAD,CAASD,UAAWC,EAAUW,GAAG,OAAOxB,MAAO,CAACF,KAAAA,GAAhD,mBAGA,SAAC,KAAD,CAASc,UAAWC,EAAUW,GAAG,UAAUxB,MAAO,CAACF,KAAAA,GAAnD,yBAIF,SAAC,KAAD,MAGL,ECpED,EARmB,WACjB,OACE,+BACE,SAACZ,EAAD,KAGL,C,sLCJKuC,E,OAAUC,EAAAA,OAAa,CAC3BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAY,mCAAG,WAAMC,GAAN,gFAC1B3B,QAAQC,IAAI0B,GADc,SAEHP,EAAQQ,IAAI,eAAgB,CACjDL,OAAQ,CACNI,MAAAA,KAJsB,uBAElB5B,EAFkB,EAElBA,KAFkB,kBAOnBA,GAPmB,2CAAH,sDAUZ8B,EAAc,mCAAG,sGACLT,EAAQQ,IAAI,iBADP,uBACpB7B,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdD,EAAU,mCAAG,WAAMT,GAAN,yFACD+B,EAAQQ,IAAR,gBAAqBvC,IADpB,uBAChBU,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKV+B,EAAU,mCAAG,WAAMzC,GAAN,yFACD+B,EAAQQ,IAAR,iBAAsBvC,EAAtB,aADC,uBAChBU,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVgC,EAAU,mCAAG,WAAM1C,GAAN,yFACD+B,EAAQQ,IAAR,iBAAsBvC,EAAtB,aADC,uBAChBU,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD","sources":["webpack://react-homework-template/./src/modules/MovieInformation/movieInformation.module.css?ced7","modules/MovieInformation/MovieInformation.jsx","pages/SinglMovie.jsx","shared/services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"afisha\":\"movieInformation_afisha__+uV8J\",\"movieImg\":\"movieInformation_movieImg__JgP7S\",\"menu\":\"movieInformation_menu__cNaVY\",\"link\":\"movieInformation_link__fAE1q\"};","import { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { getIdMovie } from 'shared/services/api';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport Loader from 'modules/Loader/Loader';\n\nimport css from './movieInformation.module.css';\n\nexport const MovieInformation = () => {\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState([]);\n\n  const { id } = useParams();\n\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchMovieId = async () => {\n      try {\n        setLoading(true);\n        const data = await getIdMovie(id);\n        setMovie(data);\n        setGenres(data.genres);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieId();\n  }, [id]);\n\n  const goBack = useCallback(() => {\n    navigate(from);\n  }, [navigate, from]);\n\n  return (\n    <>\n      <button onClick={goBack}>GO BACK</button>\n      {loading && <Loader />}\n\n      <div className={css.afisha}>\n        {movie.poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            className={css.movieImg}\n            alt=\"\"\n          ></img>\n        )}\n        <div>\n          <h1>{movie.title}</h1>\n          <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <ul>\n            {genres.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className={css.menu}>\n        <NavLink className={css.link} to=\"cast\" state={{from}}>\n          Cast\n        </NavLink>\n        <NavLink className={css.link} to=\"reviews\" state={{from}}>\n          Reviews\n        </NavLink>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n","import { MovieInformation } from 'modules/MovieInformation/MovieInformation';\n\nconst SinglMovie = () => {\n  return (\n    <>\n      <MovieInformation />\n    </>\n  );\n};\n\nexport default SinglMovie;","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=bf112b0bdd94b872432eacde842e62d8\n\nconst instans = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'bf112b0bdd94b872432eacde842e62d8',\n    language: 'en-US',\n  },\n});\n\nexport const searchMovies = async query => {\n  console.log(query)\n  const { data } = await instans.get('search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMostPopular = async () => {\n  const { data } = await instans.get('movie/popular');\n  return data;\n};\n\nexport const getIdMovie = async id => {\n  const { data } = await instans.get(`movie/${id}`);\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await instans.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instans.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["MovieInformation","useState","loading","setLoading","movie","setMovie","genres","setGenres","id","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovieId","getIdMovie","data","console","log","message","goBack","useCallback","onClick","Loader","className","css","poster_path","src","alt","title","Math","round","vote_average","overview","map","name","to","instans","axios","baseURL","params","api_key","language","searchMovies","query","get","getMostPopular","getCredits","getReviews"],"sourceRoot":""}